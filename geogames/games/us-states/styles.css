/* General body and container styling */
body {
    font-family: Arial, sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    background-color: #f0f2f5;
    margin: 0;
    padding: 20px;
    box-sizing: border-box;
}

#game-container {
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    padding: 30px;
    text-align: center;
    width: 100%;
    max-width: 1200px; /* Adjust max-width as needed for your layout */
    display: flex;
    flex-direction: column;
    align-items: center;
}

h1 {
    color: #333;
    margin-bottom: 20px;
}

.info-panel {
    display: flex;
    justify-content: space-around;
    width: 100%;
    max-width: 600px;
    margin-bottom: 30px;
    font-size: 1.1em;
    color: #555;
}

.info-item span {
    font-weight: bold;
    color: #007bff;
}

#target-state {
    font-size: 1.8em;
    font-weight: bold;
    color: #28a745; /* Green for active target */
    margin-bottom: 25px;
    min-height: 1.8em; /* Prevent layout shift when text changes */
}

/* Map Container Styling */
#map-container {
    width: 100%;
    max-width: 1000px; /* SVG viewBox width */
    height: auto; /* Maintain aspect ratio */
    border: 1px solid #ddd;
    border-radius: 5px;
    overflow: hidden; /* Ensures any overflow from the SVG is hidden */
}

#map-container svg {
    display: block; /* Remove extra space below SVG */
    width: 100%;
    height: 100%;
}

/* SVG Path Styling (default for all states) */
/* The fill/stroke properties set here will be the default for states not affected by special classes */
.map-container path {
    fill: #cfd8dc; /* Light blue-grey for default states */
    stroke: #607d8b; /* Darker blue-grey for borders */
    stroke-width: 1px;
    transition: fill 0.3s ease, filter 0.3s ease, transform 0.3s ease, stroke-width 0.3s ease;
    cursor: pointer;
}

/* Hover effect for clickable states */
.map-container path.hover-state {
    fill: #a0c4ff !important; /* Lighter blue on hover */
    stroke-width: 2px; /* Make the border thicker on hover */
    filter: drop-shadow(0 0 5px rgba(160, 196, 255, 0.8)); /* Subtle glow */
}

/* State Feedback Classes */
.map-container path.correct {
    fill: #a8df8e; /* Light green for correct guess */
    pointer-events: none; /* No clicks after correct */
}

.map-container path.partial {
    fill: #fdfd96; /* Light yellow for correct after misses */
    pointer-events: none; /* No clicks after correct */
}

.map-container path.incorrect-temp {
    animation: flashRed 0.8s ease-out forwards; /* Flash red animation */
}

.map-container path.fail {
    fill: #ff6666; /* Red for failed states */
    animation: pulseRed 1.5s infinite alternate; /* Pulsating effect */
}

.map-container path.given-up {
    fill: #8b0000; /* Darker red for given up states */
    pointer-events: none; /* No clicks after given up */
}

/* Keyframes for animations */
@keyframes flashRed {
    0% { fill: #ff6666; } /* Start red */
    100% { fill: #cfd8dc; } /* End at default state color */
}

@keyframes pulseRed {
    0% { fill: #ff6666; } /* Brighter red */
    100% { fill: #cc0000; } /* Darker red */
}

@keyframes pulseOutline {
    0% {
        stroke-width: 1.5px;
        filter: drop-shadow(0 0 5px rgba(129, 199, 132, 0.5)); /* Subtle green glow */
    }
    100% {
        stroke-width: 3px;
        filter: drop-shadow(0 0 10px rgba(129, 199, 132, 0.8));
    }
}

/* DC Cutout Specific Styles */

/* Ensure the cutout group is always visible */
#dc-cutout-group {
    display: block;
    /* You might want to adjust its exact position if not already done in SVG */
    /* Example: transform="translate(X, Y)" on the <g> in the SVG */
}

/* Style for the background circle of the magnified DC */
#dc-cutout-group circle {
    fill: #f0f4f8; /* Light background for the cutout */
    stroke: #607d8b;
    stroke-width: 2px;
}

/* Styles for the magnified DC path within the cutout */
#DC-magnified {
    fill: #cfd8dc; /* Default fill when active or idle */
    stroke: #607d8b;
    stroke-width: 1.5px;
    cursor: pointer;
    transition: fill 0.3s ease, filter 0.3s ease, stroke-width 0.3s ease;
}

/* Styles for the magnified DC when it's NOT the current target (inactive) */
#DC-magnified.inactive-magnified {
    fill: #e0e0e0; /* Muted color when inactive */
    stroke: #9e9e9e; /* Muted stroke */
    cursor: default; /* Not clickable */
    pointer-events: none; /* Crucially, make it non-interactive */
    filter: none; /* Remove any glow */
    opacity: 0.8; /* Slightly less prominent than active states */
}

/* The highlight for the current target (magnified DC) */
#DC-magnified.highlight-target {
    animation: pulseOutline 1.5s infinite alternate; /* Pulsating outline to draw attention */
    fill: #81c784 !important; /* A light green to indicate it's the target */
    cursor: pointer; /* Ensure clickable */
    pointer-events: all; /* Ensure it captures clicks */
}

/* Apply feedback classes directly to magnified DC (overrides inactive-magnified) */
#DC-magnified.correct {
    fill: #a8df8e !important;
    animation: none; /* Stop pulsing/flashing */
    filter: none;
    pointer-events: none;
}

#DC-magnified.partial {
    fill: #fdfd96 !important;
    animation: none;
    filter: none;
    pointer-events: none;
}

#DC-magnified.incorrect-temp {
    animation: flashRed 0.8s ease-out forwards;
}

#DC-magnified.fail {
    fill: #ff6666 !important;
    animation: pulseRed 1.5s infinite alternate;
    pointer-events: all; /* Still clickable to acknowledge failure */
}

#DC-magnified.given-up {
    fill: #8b0000 !important;
    animation: none;
    filter: none;
    pointer-events: none;
}

/* Leader line styles */
#dc-leader-line {
    stroke: #607d8b;
    stroke-width: 1px;
    stroke-dasharray: 4 2; /* Dashed line */
}

/* Make the original tiny states non-clickable and slightly dim */
/* This ensures the original DC on the map doesn't interfere with the magnified one */
path.has-cutout {
  pointer-events: none;
  opacity: 0.5; /* Dim the original tiny DC on the main map */
}
