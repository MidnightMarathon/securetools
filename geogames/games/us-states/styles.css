/* General body and container styling */
body {
    font-family: Arial, sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    background-color: #f0f2f5;
    margin: 0;
    padding: 20px;
    box-sizing: border-box;
}

#game-container {
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    padding: 30px;
    text-align: center;
    width: 100%;
    max-width: 1200px;
    display: flex;
    flex-direction: column;
    align-items: center;
}

h1 {
    color: #333;
    margin-bottom: 20px;
}

.info-panel {
    display: flex;
    justify-content: space-around;
    width: 100%;
    max-width: 600px;
    margin-bottom: 30px;
    font-size: 1.1em;
    color: #555;
}

.info-item span {
    font-weight: bold;
    color: #007bff;
}

#target-state {
    font-size: 1.8em;
    font-weight: bold;
    color: #28a745;
    margin-bottom: 25px;
    min-height: 1.8em;
}

/* Map Container Styling */
#map-container {
    width: 100%;
    max-width: 1000px;
    height: auto;
    border: 1px solid #ddd;
    border-radius: 5px;
    overflow: hidden;
}

#map-container svg {
    display: block;
    width: 100%;
    height: 100%;
}

/* SVG Path Styling */
.map-container path {
    fill: #cfd8dc;
    stroke: #607d8b;
    stroke-width: 1px;
    transition: filter 0.3s ease, transform 0.3s ease;
    cursor: pointer;
}

/* Hover effect for clickable states */
.map-container path.hover-state {
    fill: #a0c4ff !important;
    stroke-width: 2px;
    filter: drop-shadow(0 0 5px rgba(160, 196, 255, 0.8));
}

/* State Feedback Classes */
.map-container path.correct {
    fill: #a8df8e;
    pointer-events: none;
}

.map-container path.partial {
    fill: #fdfd96;
    pointer-events: none;
}

.map-container path.incorrect-temp {
    fill: #ff6666 !important;
    stroke: #ff0000 !important;
    stroke-width: 3px !important;
    animation: none !important;
}

.map-container path.fail {
    fill: #ff6666;
    animation: pulseRed 1.5s infinite alternate;
}

.map-container path.given-up {
    fill: #8b0000;
    pointer-events: none;
}

/* Keyframes for animations */
@keyframes flashRed {
    0% {
        fill: #ff6666 !important;
        stroke: #ff0000 !important;
        stroke-width: 3px !important;
    }
    100% {
        fill: #cfd8dc;
        stroke: #607d8b;
        stroke-width: 1px;
    }
}

@keyframes pulseRed {
    0% { fill: #ff6666; }
    100% { fill: #cc0000; }
}

@keyframes riseAndFall {
    0% {
        transform: scale(1) translateY(0);
        filter: drop-shadow(0 0 0 rgba(0, 0, 0, 0));
    }
    30% {
        transform: scale(1.2) translateY(-10px);
        filter: drop-shadow(0 6px 8px rgba(0, 0, 0, 0.3));
    }
    100% {
        transform: scale(1) translateY(0);
        filter: drop-shadow(0 0 0 rgba(0, 0, 0, 0));
    }
}

.map-container path.correct.pop,
.map-container path.partial.pop {
    animation: riseAndFall 0.5s ease-out;
    transform-origin: center;
    cursor: default;
}

.map-container path.correct,
.map-container path.correct.pop {
    fill: #a8df8e !important;
    pointer-events: none;
}

.map-container path.partial,
.map-container path.partial.pop {
    fill: #fdfd96 !important;
    pointer-events: none;
}
